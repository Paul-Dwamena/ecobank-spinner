{"version":3,"sources":["MainPage.js","components/wheel/index.js","79952-successful.gif","components/Login.js","components/Page.js","SuccessPage.js","App.js","serviceWorker.js","index.js","Context.js","ecobank.png"],"names":["MainPage","context","useAppContext","user","activeproducts","PromoterId","ShopId","useState","left","setleft","won","setWon","history","useHistory","useEffect","a","token","Buffer","from","toString","data","promoterId","axios","post","headers","Authorization","response","statusCode","console","log","message","getAllActivePremiums","getAllWonPremiums","getallpreminums","className","items","shopid","promoterid","Wheel","React","Component","constructor","props","super","onChange","e","this","setState","target","name","value","output","showform","modalIsOpen","onSubmit","preventDefault","loading","state","fname","lname","phone","prize","location","gender","userdata","fullname","phoneNumber","premiumId","PremiumId","shopId","push","PremiumName","handleClose","modal","show","style","width","Header","id","color","fontWeight","Body","htmlFor","type","required","Footer","selectedItem","selectItem","bind","length","Math","floor","random","onSelectItem","setTimeout","alert","render","wheelVars","spinning","height","src","mtnlogo","position","top","right","marginRight","marginTop","alt","margin","onClick","map","item","index","key","backgroundColor","module","exports","useStyles","makeStyles","theme","root","center","padding","Firstpage","classes","setLoading","dispatch","error","setError","display","flexDirection","justifyContent","maxWidth","initialValues","pinnumber","validationSchema","Yup","shape","values","payload","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","mt","mb","p","bgcolor","align","variant","Boolean","fullWidth","helperText","label","onBlur","my","disabled","size","Page","forwardRef","ref","children","title","rest","SuccessPage","to","borderRadius","textAlign","fontSize","match","params","App","exact","path","component","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","Context","createContext","Provider","reducer","action","isLoggedIn","wonproducts","useContext"],"mappings":"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","file":"static/js/main.b3861449.chunk.js","sourcesContent":["import React,{useEffect,useState} from \"react\";\r\nimport Wheel from \"./components/wheel\";\r\nimport \"./styles.css\";\r\nimport axios from 'axios'\r\nimport { useAppContext } from \"./Context\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst  MainPage =()=> {\r\n\r\n  const context=useAppContext()\r\n  const {activeproducts,user}=context\r\n\r\n  const{PromoterId,ShopId}=user\r\n  const [left,setleft]=useState([])\r\n  const [won,setWon]=useState([])\r\n  const history=useHistory()\r\n\r\n\r\n\r\n  useEffect(() => {\r\n  const getallpreminums=async()=>{\r\n    try {\r\n      const username = \"username\";\r\n      const password = \"password\";\r\n\r\n      const token = Buffer.from(\r\n        `${username}:${password}`,\r\n        \"utf8\"\r\n      ).toString(\"base64\");\r\n\r\n      const url = \"https://ecobank.agyeikumi.com/ecobank-php-api/customer/getAllActivePremiums\";\r\n      const data = {\r\n          promoterId:PromoterId\r\n      };\r\n\r\n      const response =await axios.post(url, data, {\r\n        headers: {\r\n          Authorization: `Basic ${token}`,\r\n        },\r\n      });\r\n\r\n      if (response.data.statusCode===100){\r\n          console.log(response.data.message)\r\n      }\r\n      else if(response.data.statusCode===200){\r\n          setleft(response.data.response.getAllActivePremiums)\r\n          setWon(response.data.response.getAllWonPremiums || [])\r\n        \r\n      }\r\n\r\n      \r\n\r\n     \r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      // dispatch({ type: \"SIGN_IN\", error: error.response });\r\n  \r\n    }\r\n\r\n\r\n  }\r\n  getallpreminums()\r\n\r\n\r\n    \r\n     \r\n  }, [])// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n \r\n  \r\n  \r\n  \r\n  \r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Wheel\r\n          items={left}\r\n          won={won}\r\n          shopid={ShopId}\r\n          promoterid={PromoterId}\r\n          history={history}\r\n        /> \r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default MainPage\r\n","import React from \"react\";\r\nimport \"../../index.css\";\r\nimport axios from \"axios\";\r\n// import Button from \"react-bootstrap/Button\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\n\r\nimport mtnlogo from \"../../ecobank.png\";\r\n\r\n\r\n\r\nexport default class Wheel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedItem: null,\r\n      showform: false,\r\n      lname: \"\",\r\n      fname: \"\",\r\n      phone: \"\",\r\n      shopid: this.props.shopid,\r\n      promoterId: this.props.promoterid,\r\n      location: \"\",\r\n      prize: \"\",\r\n      loading: false,\r\n      modalIsOpen: false,\r\n      gender: \"\",\r\n    };\r\n    this.selectItem = this.selectItem.bind(this);\r\n  }\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n  output = () => {\r\n    this.setState({ showform: true, modalIsOpen: true });\r\n    // console.log(this.state.prize);\r\n  };\r\n  onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    this.setState({ loading: true });\r\n    try {\r\n      const username = \"username\";\r\n      const password = \"password\";\r\n\r\n      const token = Buffer.from(`${username}:${password}`, \"utf8\").toString(\r\n        \"base64\"\r\n      );\r\n\r\n      \r\n\r\n      \r\n      const { fname, lname, phone, prize, location, gender } = this.state;\r\n      \r\n\r\n      const url =\r\n        \"https://ecobank.agyeikumi.com/ecobank-php-api/customer/redeemPremium\";\r\n        const userdata = {\r\n          fullname: fname + \" \" + lname,\r\n          phoneNumber: phone,\r\n          premiumId: prize.PremiumId,\r\n          location,\r\n          shopId: this.props.shopid,\r\n          promoterId: this.props.promoterid,\r\n        };\r\n\r\n        const response = await axios.post(url, userdata, {\r\n          headers: {\r\n            Authorization: `Basic ${token}`,\r\n          },\r\n        });\r\n\r\n        console.log(response.data)\r\n        \r\n        if (response.data.statusCode=== 200){\r\n          this.setState({ loading: false });\r\n          this.props.history.push(`/success/${prize.PremiumName}`);\r\n\r\n        }\r\n      // const resSMS = await axios.post(smsurl, userdata);\r\n      // console.log(resSMS.data);\r\n      // const resEmail = await axios.post(emailUrl, userdata);\r\n      //console.log(resEmail.data);\r\n\r\n    \r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      this.setState({ loading: false });\r\n      // console.log(this.props.history);\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ modalIsOpen: false });\r\n  };\r\n  modal = () => {\r\n    const { fname, lname, phone, location, modalIsOpen, gender } = this.state;\r\n\r\n    return (\r\n      <Modal show={modalIsOpen} style={{ width: \"98%\" }}>\r\n        <form onSubmit={this.onSubmit} className=\"\">\r\n          <Modal.Header>\r\n            <h5\r\n              className=\"modal-title\"\r\n              id=\"addOwnerModalText\"\r\n              style={{ color: \"black\" }}\r\n            >\r\n              Congratulations on winning your{\" \"}\r\n              <b style={{ color: \"red\", fontWeight: \"bold\" }}>\r\n                {this.state.prize.PremiumName}\r\n              </b>\r\n              . fill the form below to claim your prize\r\n            </h5>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4 col-sm-4 col-xs-4\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"inputOne\" className=\"col-form-label\">\r\n                      First Name:\r\n                    </label>\r\n                    <input\r\n                      id=\"inputOne\"\r\n                      value={fname}\r\n                      onChange={this.onChange}\r\n                      name=\"fname\"\r\n                      type=\"text\"\r\n                      required\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-4 col-xs-4\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"inputOne\" className=\"col-form-label\">\r\n                      Last Name:\r\n                    </label>\r\n                    <input\r\n                      id=\"inputOne\"\r\n                      value={lname}\r\n                      onChange={this.onChange}\r\n                      name=\"lname\"\r\n                      required\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4 col-sm-4 col-xs-4\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"inputTwo\" className=\"col-form-label\">\r\n                      Phone Number\r\n                    </label>\r\n                    <input\r\n                      id=\"inputTwo\"\r\n                      value={phone}\r\n                      onChange={this.onChange}\r\n                      name=\"phone\"\r\n                      required\r\n                      type=\"number\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"row\">\r\n                {/* <div className=\"col\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"inputThree\" className=\"col-form-label\">\r\n                      Age\r\n                    </label>\r\n                    <input\r\n                      id=\"inputThree\"\r\n                      value={age}\r\n                      onChange={this.onChange}\r\n                      name=\"age\"\r\n                      type=\"text\"\r\n                      required\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </div> */}\r\n                <div className=\"col\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"inputFour\" className=\"col-form-label\">\r\n                      Location:\r\n                    </label>\r\n                    <input\r\n                      id=\"inputFour\"\r\n                      value={location}\r\n                      onChange={this.onChange}\r\n                      name=\"location\"\r\n                      required\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"inputFour\" className=\"col-form-label\">\r\n                      Gender\r\n                    </label>\r\n                    <select\r\n                      value={gender}\r\n                      onChange={this.onChange}\r\n                      name=\"gender\"\r\n                      required\r\n                      className=\"form-control\"\r\n                    >\r\n                      <option value=\"\">---Select gender---</option>\r\n                      <option value={\"male\"}>Male</option>\r\n                      <option value={\"female\"}>Female</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* <div className=\"row\">\r\n               \r\n                <div className=\"col\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"inputFour\" className=\"col-form-label\">\r\n                      Outlet name\r\n                    </label>\r\n                    <input\r\n                      id=\"inputFour\"\r\n                      value={outletname}\r\n                      onChange={this.onChange}\r\n                      name=\"outletname\"\r\n                      required\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n             \r\n              </div> */}\r\n\r\n              <div className=\"row\"></div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                Close\r\n              </Button> */}\r\n\r\n            <button\r\n              id=\"performSendAction\"\r\n              type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n            >\r\n              {this.state.loading ? (\r\n                <span>loading</span>\r\n              ) : (\r\n                <span> Submit Claim</span>\r\n              )}\r\n            </button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    );\r\n  };\r\n  async selectItem() {\r\n    if (this.props.items.length > 0) {\r\n      if (this.state.selectedItem === null) {\r\n        const selectedItem = Math.floor(\r\n          Math.random() * this.props.items.length\r\n        );\r\n        if (this.props.onSelectItem) {\r\n          await this.props.onSelectItem(selectedItem);\r\n        }\r\n        this.setState({ selectedItem, prize: this.props.items[selectedItem] });\r\n        setTimeout(this.output, 4000);\r\n      } else {\r\n        this.setState({ selectedItem: null });\r\n        setTimeout(this.selectItem, 500);\r\n        //console.log(this.state.selectedItem)\r\n      }\r\n    } else {\r\n      alert(\"there is no prize to be won\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { selectedItem } = this.state;\r\n    const { items } = this.props;\r\n\r\n    const wheelVars = {\r\n      \"--nb-item\": items.length,\r\n      \"--selected-item\": selectedItem,\r\n    };\r\n    const spinning = selectedItem !== null ? \"spinning\" : \"\";\r\n\r\n    return (\r\n      <div style={{ height: \"100vh\" }}>\r\n        <img\r\n          className=\"Header-logo\"\r\n          src={mtnlogo}\r\n          width=\"60px\"\r\n          style={{\r\n            position: \"absolute\",\r\n            top: 0,\r\n            right: 0,\r\n            marginRight: \"20px\",\r\n            marginTop: \"10px\",\r\n          }}\r\n          alt=\"Logo\"\r\n        />\r\n\r\n        {items.length !== 0 ? (\r\n          <div\r\n            className=\"container\"\r\n            style={{ margin: \"auto\", width: \"100%\", marginTop: \"100px\" }}\r\n          >\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h5\r\n                  className=\"\"\r\n                  style={{ color: \"#3f51b5\", fontWeight: \"bold\" }}\r\n                >\r\n                  WIN YOUR PRIZE HERE\r\n                </h5>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"wheel-container\">\r\n                <div\r\n                  className={`wheel ${spinning}`}\r\n                  style={wheelVars}\r\n                  onClick={this.selectItem}\r\n                >\r\n                  {items.map((item, index) => (\r\n                    <div\r\n                      className=\"wheel-item\"\r\n                      key={index}\r\n                      style={{ \"--item-nb\": index }}\r\n                    >\r\n                      {item.PremiumName}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              {this.modal()}\r\n              {/* <div className=\"col-sm-4\">{this.state.showform ? this.form() : null}</div> */}\r\n            </div>\r\n            <div className=\"row mb-4 \">\r\n              <div className=\"col-12 text-center\">\r\n                <h3 style={{ color: \"white\" }}> Prizes won</h3>\r\n                <div className=\"card\">\r\n                  <table className=\"table\">\r\n                    <thead>\r\n                      <tr style={{ backgroundColor: \"#3f51b5\" }}>\r\n                        <th style={{ color: \"white\" }}>#</th>\r\n                        <th style={{ color: \"white\" }}>Prize</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {this.props.won.map((data, index) => (\r\n                        <tr>\r\n                          <td>{index + 1}</td>\r\n                          <td>{data.PremiumName}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1\r\n                  className=\"\"\r\n                  style={{ color: \"purple\", marginTop: \"100px\" }}\r\n                >\r\n                  All items for this outlet have been won already\r\n                </h1>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row mb-4 \">\r\n              <div className=\"col-12 text-center\">\r\n                <h3 style={{ color: \"purple\" }}> Prizes won</h3>\r\n                <div className=\"card\">\r\n                  <table className=\"table\">\r\n                    <thead>\r\n                      <tr style={{ backgroundColor: \"#3f51b5\" }}>\r\n                        <th>#</th>\r\n                        <th>Prize</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {this.props.won.map((data, index) => (\r\n                        <tr>\r\n                          <td>{index + 1}</td>\r\n                          <td>{data.name}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/79952-successful.60de8662.gif\";","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport Page from \"./Page\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport mtnlogo from \"../ecobank.png\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  TextField,\r\n  Typography,\r\n  makeStyles,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { useAppContext } from \"../Context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"white\",\r\n    height: \"100vh\",\r\n  },\r\n  center: {\r\n    margin: \"auto\",\r\n    width: \"40%\",\r\n    padding: 10,\r\n  },\r\n}));\r\n\r\nconst Firstpage = () => {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n  const context=useAppContext()\r\n  const{dispatch}=context\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  \r\n  return (\r\n    <Page className={classes.root}>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <div className={classes.center}>\r\n            {\" \"}\r\n            <img\r\n              className=\"Header-logo\"\r\n              src={mtnlogo}\r\n              width=\"100px\"\r\n              alt=\"Logo\"\r\n            />{\" \"}\r\n          </div>\r\n          <Formik\r\n            initialValues={{\r\n              pinnumber: \"\",\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              pinnumber: Yup.string().required(\"Pin number is required\"),\r\n            })}\r\n            onSubmit={async (values) => {\r\n              setError(\"\");\r\n              setLoading(true);\r\n              try {\r\n                const username = \"username\";\r\n                const password = \"password\";\r\n\r\n                const token = Buffer.from(\r\n                  `${username}:${password}`,\r\n                  \"utf8\"\r\n                ).toString(\"base64\");\r\n\r\n                const url = \"https://ecobank.agyeikumi.com/ecobank-php-api/customer/login\";\r\n                const data = {\r\n                    promoterId:values.pinnumber\r\n                };\r\n\r\n                const response =await axios.post(url, data, {\r\n                  headers: {\r\n                    Authorization: `Basic ${token}`,\r\n                  },\r\n                });\r\n\r\n                if (response.data.statusCode===100){\r\n                    setError(response.data.message)\r\n                }\r\n                else if(response.data.statusCode===200){\r\n                    dispatch({\r\n                        type:'SETID',\r\n                        payload:values.pinnumber\r\n                    });\r\n\r\n                    dispatch({\r\n                        type:'SETUSER',\r\n                        payload:{...response.data.response[0]}\r\n                    });\r\n\r\n                    history.push('/wheel')\r\n\r\n                    \r\n\r\n                }\r\n\r\n                \r\n\r\n               \r\n              } catch (error) {\r\n                console.log(error.response.data);\r\n                // dispatch({ type: \"SIGN_IN\", error: error.response });\r\n                setError(\"Email or password not correct\");\r\n                setLoading(false);\r\n              }\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values,\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                {error ? (\r\n                  <Box mt={3} mb={1} p={2} bgcolor=\"error.main\">\r\n                    <Typography\r\n                      align=\"center\"\r\n                      // color=\"primary\"\r\n\r\n                      variant=\"body1\"\r\n                      style={{ color: \"white\" }}\r\n                    >\r\n                      {error}\r\n                    </Typography>\r\n                  </Box>\r\n                ) : null}\r\n                <TextField\r\n                  type=\"number\"\r\n                  error={Boolean(touched.pinnumber && errors.pinnumber)}\r\n                  fullWidth=\"true\"\r\n                  helperText={touched.pinnumber && errors.pinnumber}\r\n                  label=\"Enter your pin\"\r\n                  margin=\"normal\"\r\n                  name=\"pinnumber\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.pinnumber}\r\n                  variant=\"outlined\"\r\n                />\r\n                {/* <TextField\r\n                  type=\"number\"\r\n                  error={Boolean(touched.confirmnumber && errors.confirmnumber)}\r\n                  fullWidth\r\n                  helperText={touched.confirmnumber && errors.confirmnumber}\r\n                  label=\"Confirm Phone Number\"\r\n                  margin=\"normal\"\r\n                  name=\"confirmnumber\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.confirmnumber}\r\n                  variant=\"outlined\"\r\n                /> */}\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Send {loading ? <CircularProgress /> : null}\r\n                  </Button>\r\n                </Box>\r\n\r\n                {/* <Typography color=\"textSecondary\" variant=\"body1\">\r\n                  Forgort password?{' '}\r\n                  <Link to=\"/password-reset\" variant=\"h6\">\r\n                    Reset\r\n                  </Link>\r\n                </Typography> */}\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Firstpage;\r\n","import React, { forwardRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Page = forwardRef(({\r\n  children,\r\n  title = '',\r\n  ...rest\r\n}, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","import { purple } from \"@material-ui/core/colors\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport mtnlogo from \"./79952-successful.gif\";\r\n\r\nexport default class SuccessPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"\">\r\n        <nav className=\"navbar navbar-expand-sm bg-light\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-link\">\r\n              <Link to=\"/wheel\">\r\n                <i className=\"fa fa-home\" ></i> <span style={{display:\"block\",backgroundColor:\"#3f51b5\",padding:10,color:\"white\",borderRadius:5}}>Home</span>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <h3 style={{ color: \"purple\",textAlign:\"center\",marginTop:\"140px\" }}>\r\n          Congratulations You have won a{\" \"}\r\n          <b style={{ color: \"#3f51b5\", fontWeight: \"bolder\", fontSize: \"40px\" }}>\r\n            {\" \"}\r\n            {this.props.match.params.item}\r\n          </b>{\" \"}\r\n        </h3>\r\n\r\n        <div style={{ margin: \"auto\", width: \"80%\", }}>\r\n          <img src={mtnlogo} alt=\"pic\" width=\"300px\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport MainPage from \"./MainPage\";\r\nimport SuccessPage from './SuccessPage';\r\nimport { Provider } from \"./Context\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Firstpage from \"./components/Login\";\r\nimport \"./styles.css\";\r\n\r\n\r\nexport default class App extends React.Component {\r\n \r\n\r\n  render() {\r\n    return (\r\n      <Provider>\r\n       <Router>\r\n        <div className=\"container\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Firstpage} />  \r\n            <Route exact path=\"/wheel/\" component={MainPage} />\r\n            <Route exact path=\"/success/:item\" component={SuccessPage} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n      </Provider>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { Component, useContext } from \"react\";\r\n\r\n\r\nconst Context = React.createContext();\r\n\r\nclass Provider extends Component {\r\n  reducer = (state, action) => {\r\n    switch (action.type) {\r\n     \r\n      case \"SETACTIVE\":      \r\n        return {\r\n          ...state,\r\n          activeproducts: action.payload,\r\n        };\r\n\r\n        case \"SETID\":      \r\n        return {\r\n          ...state,\r\n          promoterid: action.payload,\r\n        };\r\n\r\n        case \"SETUSER\":      \r\n        return {\r\n          ...state,\r\n          user: action.payload,\r\n        };\r\n\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  state = {\r\n    user: null,\r\n    error: \"\",\r\n    shopid:\"\",\r\n    promoterid:\"\",\r\n    isLoggedIn: false,\r\n    wonproducts:[],\r\n    activeproducts:null,\r\n    dispatch: (action) => {\r\n      this.setState((state) => this.reducer(state, action));\r\n    },\r\n  };\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\nconst useAppContext = () => useContext(Context);\r\n\r\nexport { Provider, useAppContext };\r\n","module.exports = __webpack_public_path__ + \"static/media/ecobank.16ceb09f.png\";"],"sourceRoot":""}